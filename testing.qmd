# Testing your code

## Assertive programming

The analysis is still in Quarto, so how could the readers of this book test their code?
Copying here what Miles wrote on the subject:

*‘Assertive programming’ is a topic that might be missing from the book. I think of it as a kind of
dual of unit testing. Unit testing is for more generally applicable packaged code. But when you
have functions in your analysis pipeline that operate on a very specific kind of input data, unit
testing becomes kind of nonsensical because you’re left to dream up endless variations of your
input dataset that may never occur. It’s a bit easier to flip the effort to validating the
assumptions you have about your input and output data, which you can do in the pipeline functions
themselves rather than separate unit testing ones. This is nice because it ensures the validation
is performed in the pipeline run, and so is backed by the same reproducibility guarantees.*

I think at the end of the chapter we should hint at unit testing, but leave it as a subsection of
the next chapter that deals with packaging code.
