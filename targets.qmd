# Build automation

## Introduction

## {targets} quick-start

## Handling files

## Running the pipeline in parallel

## {targets} and {renv}

*Why build automation: removes cognitive load, is a form of documentation in and of itself, as
Miles said*

*It is possible to communicate a great deal of domain knowledge in code, such that it is illuminating beyond the mere mechanical number crunching. To do this well the author needs to make use of certain styles and structures that produce code that has layers of domain specific abstraction a reader can traverse up and down as they build their understanding of the project. Functional programming style, coupled with a dependency graph as per {targets} are useful tools in this regard.*
