# Part 1: learning the fundamental ingredients of reproducibility

## Introduction

Part 1 will focus on teaching you the fundamental ingredients to reproducibility.
By fundamental ingredients we mean those tools that you absolutely need to have
in your toolbox to before even attempting to make a project reproducible. These
tools are so important, that a good chunk of this book is dedicated to them:

- Version control;
- Functional programming;
- Testing your code;
- Literate programming.

You might already be familiar with some of these tools, and maybe already use them 
in your day to day. If that’s the case, you still might want to at least skim these 
chapter before tackling part 2 of the book, which will focus on another set of tools
to actually build reproducible pipelines.

So this means that part 1 will not teach you how to build reproducible pipelines.
But we cannot immediately start building reproducible analytical pipelines without
first making sure that we understand the core concepts laid out above. To help us
undertant these concepts, we will start by writing an analysis. We are going to download,
clean and plot some data, and write two scripts to achieve this. These scripts will be 
written in a very "typical non software engineery" way, as to mimic how analysts, data scientists
or researchers without any formal training in computer science would perform such an analysis.
This does not mean that the quality of the analysis will be low. But it means that, typically,
this group of programmers have as a priority delivering the analysis as fast as possible,
in whatever way possible. Our goal with this book is to show you, and hopefully convince you,
that by adopting certain simple ideas from software engineering we can actually deliver just
as fast as before, but in a more consistent and robust way.

Let’s get started!
